git init - Inicia um repositório

git init --bare <nome do repositório>.git - Cria um repositório para ser acessado remotamente, a opção --bare impede que seja criado uma working tree (diretório de trabalho) impedindo que seja efetuados commits no servidor, já que os commit's chegarão remotamente

git add - Adiciona um arquivo para ser rastreado

git commit -m - Comita (grava) um nova versão do arquivo (-m é para informar as alterações feitas no commit)

git status - Informa a situação dos arquivos no repositório (alterações e afins)

git log - Informa o histórico de alterações do repositório

git config --global user.name "Fulano da Silva" - configura nome do usuário no git

git config --global user.email fulanodasilva.git@gmail.com - configura email do usuário no git

git remote add origin <url do repositório>.git - Aponta para um repositório remoto onde "origin" é o nome que será atribuído a esse repositório no git

git remote - Exibe os nomes dos repositórios remotos adicionados ao git

git remote -v - Exibe os nomes e urls dos repositórios remotos adicionados ao git

git remote rename <nome antigo> <nome novo> - Renomeia o "name" de um repositório remoto adicionado ao git

git remote set-url <nome do repositório> <nova url do repositório> - Altera a url de um repositório adicionado ao git

git push origin master - Envia os arquivos de um repositório local para um repositório remoto."origin" é o nome atribuído ao repositório utilizando git remote add

git push origin master - Sincroniza o repositório local com o repositório remoto

git clone <url do repositório a ser clonado>.git - Clona os arquivos de um repositório remoto

git add . - o ponto representa todos os arquivos não rastreados pelo git do diretório atual e subdiretório

arquivo .gitignore - arquivo com nomes de arquivos que o git ira ignorar, arquivos que não sejam importantes para o projeto
. Se quiser ignorar todos arquivos de uma extensão é necessário adicionar *.extensão (*.png, *.txt)


Area de stage - Rastreia as mudanças nos arquivos, porem não comita (Grava) arquivos

git commit -am "Mensagem" - Adiciona arquivo para área de stage e comita (Grava)

git log -n 2 - Exibe o histórico de alterações no repositório onde "2" é a quantidade de alterações que serão exibidas

git log --oneline - Exibe um resumo das alterações no repositório com as descrições das mudanças

git log --stat - Exibe o número de linhas adicionadas e removidas das alterações

q - Sair do git log

Também é possivel combinar as várias opções do git log como git log -n 2 --oneline --stat

O git status exibe arquivos que estão fora da área de stage, prontos para serem adicionados, e arquivos que estão dentro da área de stage, prontos para serem comitados.
Já o git log exibe o histórico das mudanças efetivamente gravadas em um repositório. Ou seja, os commits efetuados

git diff - Exibe as diferenças entre o arquivo alterado e o arquivo comitado

git diff arquivo - para verificar as mudanças de um arquivo especifico

git diff --staged - Utilizado para verificar as diferenças entre o arquivo na área de stage e sua versão comitada

git diff <codigo do ultimo commit> - Usado para verificar diferenças nos arquivos modificados estando na area de stage ou não, para consultar o codigo do ultimo commit : git log -n 1 --oneline

git diff inicio..fim - Verificar histórico de alterações feitas de um commit ao outros, onde inicio e fim são os códigos dos commit's

git diff <codigo do commit>~n - Exibe histórico de alterações de um commit em relação a commits anteriores, onde n indica quantos commit anteriores devem ser considerados além de exibir também modificações não comitadas.

git rm <nome do arquivo> - Remove um arquivo do repositório, porém ainda pode ser recuperado ao navegar por commits antigos

git mv <nome do arquivo> <novo nome> - Renomeia um arquivo no repositório

git checkout -- <arquivo> - Desfaz alterações no arquivo

git reset -- <arquivo> - Retira o arquivo da área de stage preservando suas alterações, se não utilizar parâmetro ira retirar todos arquivos da area de stage e também terão suas alterações preservadas

git reset --hard - Retira todos arquivos da área do stage e também suas alterações

git revert --no-edit <codigo do commit> - Desfaz as alterações do commit informado. Opção "--no-edit" serve para que não seja preciso editar a mensagem do novo commit se ocultado devera descrever oque foi retirado
